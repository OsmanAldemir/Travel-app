/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package Arayuz;

//import java.util.ArrayList;
import javax.swing.DefaultListModel;
import javax.swing.JOptionPane;

/**
 *
 * @author Aldemir
 */
public class Aframe extends javax.swing.JFrame {
    DefaultListModel model = new DefaultListModel();
    DefaultListModel sefer = new DefaultListModel();
    DefaultListModel koltuk = new DefaultListModel();
    
    public Aframe() {
        initComponents();
        
        for (Trip trip : Trip.aracList) {
            if (trip.firmaAd.equals(Company.mevcutGiris)) {
                model.addElement(trip.aracTuru.aracTürü);
            }
        }
        
        
        for (Trip trip : Trip.aracList) {
            if (trip.firmaAd.equals(Company.mevcutGiris)) {
                sefer.addElement(trip.aracTuru.sefer);
            }
        }
        for (Trip trip : Trip.aracList) {
            if (trip.firmaAd.equals(Company.mevcutGiris)) {
                koltuk.addElement(trip.aracTuru.Kapasite);
            }
        }
        
        
        A_Arac.setModel(model);
          A_Sefer.setModel(sefer);
            lst_A_Koltuk.setModel(koltuk);
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        A_Arac = new javax.swing.JList<>();
        jScrollPane3 = new javax.swing.JScrollPane();
        A_Sefer = new javax.swing.JList<>();
        A_Arac_Ekle = new javax.swing.JButton();
        A_Arac_Sil = new javax.swing.JButton();
        A_Sefer_Ekle = new javax.swing.JButton();
        A_Sefer_Sil = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        lst_A_Koltuk = new javax.swing.JList<>();
        btn_geri = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jScrollPane1.setViewportView(A_Arac);

        jScrollPane3.setViewportView(A_Sefer);

        A_Arac_Ekle.setText("Araç Ekle: ");
        A_Arac_Ekle.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                A_Arac_EkleActionPerformed(evt);
            }
        });

        A_Arac_Sil.setText("Araç Sil:");
        A_Arac_Sil.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                A_Arac_SilActionPerformed(evt);
            }
        });

        A_Sefer_Ekle.setText("Sefer Ekle:");
        A_Sefer_Ekle.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                A_Sefer_EkleActionPerformed(evt);
            }
        });

        A_Sefer_Sil.setText("Sefer Sil:");
        A_Sefer_Sil.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                A_Sefer_SilActionPerformed(evt);
            }
        });

        jScrollPane2.setViewportView(lst_A_Koltuk);

        btn_geri.setText("Geri");
        btn_geri.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_geriActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addComponent(A_Arac_Ekle, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(A_Arac_Sil, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 139, Short.MAX_VALUE)
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(A_Sefer_Sil)
                            .addComponent(A_Sefer_Ekle)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 77, Short.MAX_VALUE)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(71, 71, 71)
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(29, 29, 29))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btn_geri)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btn_geri)
                .addGap(12, 12, 12)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addGap(16, 16, 16)
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(A_Arac_Ekle)
                    .addComponent(A_Sefer_Ekle))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(A_Arac_Sil)
                    .addComponent(A_Sefer_Sil))
                .addContainerGap(37, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void A_Arac_SilActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_A_Arac_SilActionPerformed
       int selectedFirmaIndex = A_Arac.getSelectedIndex();

        if (selectedFirmaIndex == -1 && model.getSize() != 0) {
            JOptionPane.showMessageDialog(this, "Lütfen bir firma seçiniz.", "HATA", JOptionPane.ERROR_MESSAGE);
        } else {
            String kullanilacak = (String) model.get(selectedFirmaIndex);

            for (int i = 0; i < Trip.aracList.size(); i++) {
                Trip trip = Trip.aracList.get(i);

                if (trip.aracTuru.aracTürü.equals(kullanilacak) && trip.firmaAd.equals(Company.mevcutGiris)) {
                    Trip.aracList.remove(i);
                }
            } 

        model.clear();
        for (Trip trip : Trip.aracList) {
            if (trip.firmaAd.equals(Company.mevcutGiris)) {
                model.addElement(trip.aracTuru.aracTürü);
            }
        }
        }
    }//GEN-LAST:event_A_Arac_SilActionPerformed

    private void A_Arac_EkleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_A_Arac_EkleActionPerformed
       String YeniArac = JOptionPane.showInputDialog("Lütfen eklemek istediğiniz aracın ismini giriniz:");
       String YeniSefer = JOptionPane.showInputDialog("Lütfen eklemek istediğiniz aracın seferini giriniz:");
       String YeniKapasite = JOptionPane.showInputDialog("Lütfen eklemek istediğiniz aracın kapasitesini giriniz:");

       if(YeniArac != null && !YeniArac.trim().isEmpty()) {
           if (YeniArac.contains("Otobus")) {
               Bus vehicle = new Bus(YeniArac, YeniSefer, YeniKapasite);
               Trip.aracList.add(new Trip(vehicle, Company.mevcutGiris));

           }
           else if (YeniArac.contains("Tren")) {
               Train vehicle = new Train(YeniArac, YeniSefer, YeniKapasite);
               Trip.aracList.add(new Trip(vehicle, Company.mevcutGiris));

           }
           else if (YeniArac.contains("Uçak")) {
               Airplane vehicle = new Airplane(YeniArac, YeniSefer, YeniKapasite);
               Trip.aracList.add(new Trip(vehicle, Company.mevcutGiris));
           }


         model.clear();
        for (Trip trip : Trip.aracList) {
            if (trip.firmaAd.equals(Company.mevcutGiris)) {
                model.addElement(trip.aracTuru.aracTürü);
            }
        }


        } else {
            JOptionPane.showMessageDialog(this, "Geçerli bir araç girmelisiniz.", "Hata", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_A_Arac_EkleActionPerformed

    private void A_Sefer_SilActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_A_Sefer_SilActionPerformed
        int selectedFirmaIndex = A_Sefer.getSelectedIndex();

        if (selectedFirmaIndex == -1 && sefer.getSize() != 0) {
            JOptionPane.showMessageDialog(this, "Lütfen bir araç seçiniz.", "HATA", JOptionPane.ERROR_MESSAGE);
        } else {
            sefer.remove(selectedFirmaIndex);
        }

        if (selectedFirmaIndex == -1 && model.getSize() != 0) {
            JOptionPane.showMessageDialog(this, "Lütfen bir firma seçiniz.", "HATA", JOptionPane.ERROR_MESSAGE);
        } else {
            String kullanilacak = (String) model.get(selectedFirmaIndex);

            for (int i = 0; i < Trip.aracList.size(); i++) {
                Trip trip = Trip.aracList.get(i);

                if (trip.aracTuru.aracTürü.equals(kullanilacak) && trip.firmaAd.equals(Company.mevcutGiris)) {
                    Trip.aracList.remove(i);
                }
            } 

        model.clear();
        for (Trip trip : Trip.aracList) {
            if (trip.firmaAd.equals(Company.mevcutGiris)) {
                model.addElement(trip.aracTuru.aracTürü);
            }
        }
        }
    }//GEN-LAST:event_A_Sefer_SilActionPerformed

    private void A_Sefer_EkleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_A_Sefer_EkleActionPerformed
       /*String YeniArac = JOptionPane.showInputDialog("Lütfen eklemek istediğiniz Seferi giriniz:");
       if(YeniArac != null && !YeniArac.trim().isEmpty()) {
            sefer.addElement(YeniArac);
           // listFirma.validate();
            //listFirma.repaint();
        } else {
            JOptionPane.showMessageDialog(this, "Geçerli bir sefer adı girmelisiniz.", "Hata", JOptionPane.ERROR_MESSAGE);
        }*/
       String YeniArac = JOptionPane.showInputDialog("Lütfen eklemek istediğiniz aracin ismini giriniz:");
       String YeniSefer = JOptionPane.showInputDialog("Lütfen eklemek istediğiniz aracin seferini giriniz:");
       String YeniKapasite = JOptionPane.showInputDialog("Lütfen eklemek istediğiniz aracın kapasitesini giriniz:");

       if(YeniArac != null && !YeniArac.trim().isEmpty()) {
           if (YeniArac.contains("Otobus")) {
               Bus vehicle = new Bus(YeniArac, YeniSefer, YeniKapasite);
               Trip.aracList.add(new Trip(vehicle, Company.mevcutGiris));

           }
           else if (YeniArac.contains("Tren")) {
               Train vehicle = new Train(YeniArac, YeniSefer, YeniKapasite);
               Trip.aracList.add(new Trip(vehicle, Company.mevcutGiris));

           }
           else if (YeniArac.contains("Uçak")) {
               Airplane vehicle = new Airplane(YeniArac, YeniSefer, YeniKapasite);
               Trip.aracList.add(new Trip(vehicle, Company.mevcutGiris));
           }
                 model.clear();
        for (Trip trip : Trip.aracList) {
            if (trip.firmaAd.equals(Company.mevcutGiris)) {
                model.addElement(trip.aracTuru.aracTürü);
            }
        }


        } else {
            JOptionPane.showMessageDialog(this, "Geçerli bir araç girmelisiniz.", "Hata", JOptionPane.ERROR_MESSAGE);
        }
       
    }//GEN-LAST:event_A_Sefer_EkleActionPerformed

    private void btn_geriActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_geriActionPerformed
        Firmalar geri = new Firmalar();
        geri.setVisible(true);
        //this.dispose();
    }//GEN-LAST:event_btn_geriActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Aframe.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Aframe.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Aframe.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Aframe.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Aframe().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JList<String> A_Arac;
    private javax.swing.JButton A_Arac_Ekle;
    private javax.swing.JButton A_Arac_Sil;
    private javax.swing.JList<String> A_Sefer;
    private javax.swing.JButton A_Sefer_Ekle;
    private javax.swing.JButton A_Sefer_Sil;
    private javax.swing.JButton btn_geri;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JList<String> lst_A_Koltuk;
    // End of variables declaration//GEN-END:variables
}
